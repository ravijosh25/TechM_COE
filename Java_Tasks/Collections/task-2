import java.util.*;
import java.util.stream.Stream;


public class SetSample {
    public static void main(String a[]){
        TreeSet<Float> ts = new TreeSet<>();
        ts.add(20.3f);
        ts.add(12f);
        ts.add(42.4f);
        ts.add(72.3f);
        ts.add(8.3f);
        ts.add(4.3f);
        ts.add(22.3f);
        ts.add(10.f);
        LinkedHashSet<String> lhs = new LinkedHashSet<>();
        lhs.add("A");
        lhs.add("B");
        lhs.add("ABCD");
        lhs.add("SP");
        lhs.add("AIA");
        lhs.add("MDA");
        lhs.add("B");
        HashSet<Integer> hs = new HashSet<>();
        hs.add(12);
        hs.add(20);
        hs.add(32);
        hs.add(2);
        hs.add(22);
        hs.add(62);
        hs.add(4);
        hs.add(15);
        setSample(hs);
    }

public static void setSample(HashSet<Integer> hs){

    System.out.println("HashSet Size: " + hs.size());
        System.out.println("Elements in HashSet: " + hs);
        System.out.print("Using iterator : ");
        Iterator<Integer> iterator = hs.iterator();
        while (iterator.hasNext())
            System.out.print(iterator.next() + " ");
        System.out.println();
        System.out.print("Using enhanced for loop : ");
        for (Integer element : hs)
            System.out.print(element + " ");
        Stream<Integer> StreamHashSet = hs.stream().filter(e -> e  %7 == 0);
        System.out.println("After Filtering the HashSet Number which are Divisible By 7 : ");
        StreamHashSet.forEach(e -> System.out.println(e));
}
public static void setSample(LinkedHashSet<String> lhs){
    System.out.println("HashSet Size: " + lhs.size());
    System.out.println("Elements in HashSet: " + lhs);
    System.out.print("Using iterator : ");
    Iterator<String> iterator = lhs.iterator();
    while (iterator.hasNext())
        System.out.print(iterator.next() + " ");
    System.out.println();
    System.out.print("Using enhanced for loop : ");
    for (String element : lhs)
        System.out.print(element + " ");
        Stream<String> LinkedHashSetStream = lhs.stream().filter(e -> e.length() > 5);
        System.out.println("The String Having Greater than length 5 : ");
        LinkedHashSetStream.forEach(e -> System.out.println(e));
}


public static void setSample(TreeSet<Float> ts){
    System.out.println("TreeSet Size: " + ts.size());
        System.out.println("Elements in TreeSet: " + ts);
        System.out.print("Using iterator : ");
        Iterator<Float> iterator = ts.iterator();
        while (iterator.hasNext())
            System.out.print(iterator.next() + " ");
        System.out.println();
        System.out.print("Using enhanced for loop : ");
        for (Float element : ts)
            System.out.print(element + " ");
        Stream<Float> StreamTreeSet = ts.stream().filter(e -> e > 20);
        System.out.println("After Filtering the TreeSet : ");
        StreamTreeSet.forEach(e -> System.out.println(e));


}
}
    


